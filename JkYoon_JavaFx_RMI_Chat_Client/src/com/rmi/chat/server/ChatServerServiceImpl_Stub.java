// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.rmi.chat.server;

public final class ChatServerServiceImpl_Stub
    extends java.rmi.server.RemoteStub
    implements com.rmi.chat.ChatServerService, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_exitChat_0;
    private static java.lang.reflect.Method $method_getChatList_1;
    private static java.lang.reflect.Method $method_joinChat_2;
    private static java.lang.reflect.Method $method_makeNewRoom_3;
    private static java.lang.reflect.Method $method_setMessage_4;
    private static java.lang.reflect.Method $method_sys_5;
    
    static {
	try {
	    $method_exitChat_0 = com.rmi.chat.ChatServerService.class.getMethod("exitChat", new java.lang.Class[] {java.lang.String.class, com.rmi.chat.ChatClientService.class});
	    $method_getChatList_1 = com.rmi.chat.ChatServerService.class.getMethod("getChatList", new java.lang.Class[] {});
	    $method_joinChat_2 = com.rmi.chat.ChatServerService.class.getMethod("joinChat", new java.lang.Class[] {java.lang.String.class, com.rmi.chat.ChatClientService.class});
	    $method_makeNewRoom_3 = com.rmi.chat.ChatServerService.class.getMethod("makeNewRoom", new java.lang.Class[] {java.lang.String.class});
	    $method_setMessage_4 = com.rmi.chat.ChatServerService.class.getMethod("setMessage", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_sys_5 = com.rmi.chat.ChatServerService.class.getMethod("sys", new java.lang.Class[] {com.rmi.chat.vo.ChatVo.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ChatServerServiceImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of exitChat(String, ChatClientService)
    public void exitChat(java.lang.String $param_String_1, com.rmi.chat.ChatClientService $param_ChatClientService_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_exitChat_0, new java.lang.Object[] {$param_String_1, $param_ChatClientService_2}, -3832952580575543678L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getChatList()
    public java.util.List getChatList()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getChatList_1, null, 6775340121585372894L);
	    return ((java.util.List) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of joinChat(String, ChatClientService)
    public void joinChat(java.lang.String $param_String_1, com.rmi.chat.ChatClientService $param_ChatClientService_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_joinChat_2, new java.lang.Object[] {$param_String_1, $param_ChatClientService_2}, 2725032324667603336L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of makeNewRoom(String)
    public boolean makeNewRoom(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_makeNewRoom_3, new java.lang.Object[] {$param_String_1}, -3673111425031810866L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setMessage(String, String)
    public void setMessage(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setMessage_4, new java.lang.Object[] {$param_String_1, $param_String_2}, 3352804270881037342L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of sys(ChatVo)
    public void sys(com.rmi.chat.vo.ChatVo $param_ChatVo_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_sys_5, new java.lang.Object[] {$param_ChatVo_1}, 7871942661001545874L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
